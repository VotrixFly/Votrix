<Window x:Class="Votrix.Pages.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:local="clr-namespace:Votrix.Pages"
        mc:Ignorable="d"
        WindowStyle="None"
        AllowsTransparency="True"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        Title="Votrix" Height="700" Width="1200"
        xmlns:s="https://github.com/canton7/Stylet"
        d:DataContext="{d:DesignInstance local:MainViewModel}">

    <materialDesign:DialogHost Identifier="RootDialog">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="32"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="60"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <tb:TaskbarIcon LeftClickCommand="{s:Action WindowShow}" IconSource="/Votrix;component/icon/log_cloud.ico">
                <tb:TaskbarIcon.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="模式选择">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="AllInclusive" />
                            </MenuItem.Icon>
                            <MenuItem Header="全局模式" IsCheckable="True"/>
                            <MenuItem Header="PAC模式" IsCheckable="True"/>
                            <MenuItem Header="直连模式" IsCheckable="True"/>
                            <Separator />
                            <MenuItem Header="关闭" IsCheckable="True" IsChecked="True"/>
                        </MenuItem>
                        <MenuItem Header="服务器选择" ItemsSource="{Binding VMServerList.ServerNames}">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="DatabaseSearch" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="导入二维码" Command="{s:Action AddServerFromQrcode}">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="QrcodeScan" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="导入URL" Command="{s:Action AddServerFromUrl}">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="ContentPaste" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="退出程序" Command="{s:Action WindowClose}">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="Close" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </tb:TaskbarIcon.ContextMenu>
            </tb:TaskbarIcon>


            <!--左侧选项-->
            <Grid Grid.RowSpan="2" Background="{DynamicResource PrimaryHueDarkBrush}">
                <StackPanel Margin="0,15,0,160">
                    <Button Style="{StaticResource MaterialDesignFlatButton}" Height="60" >
                        <materialDesign:PackIcon Kind="AlphabetVCircleOutline" Height="30" Width="30" RenderTransformOrigin="0.16,0.207" Foreground="White"/>
                    </Button>
                    <Button Style="{StaticResource MaterialDesignFlatButton}" Command="{s:Action ShowPageServerList}" Height="60" >
                        <materialDesign:PackIcon Kind="ViewList" Height="30" Width="30" RenderTransformOrigin="0.16,0.207" Foreground="White"/>
                    </Button>
                    <Button Style="{StaticResource MaterialDesignFlatButton}" Command="{s:Action ShowPageRSS}" Height="60" >
                        <materialDesign:PackIcon Kind="RssFeed" Height="30" Width="30" RenderTransformOrigin="0.16,0.207" Foreground="White"/>
                    </Button>
                </StackPanel>

                <StackPanel Height="130" VerticalAlignment="Bottom">
                    <Button Style="{StaticResource MaterialDesignFlatButton}" Command="{s:Action ShowPageSettings}" Height="60" >
                        <materialDesign:PackIcon Kind="SettingsTransfer" Height="30" Width="30" RenderTransformOrigin="0.16,0.207" Foreground="White"/>
                    </Button>
                    <Button Style="{StaticResource MaterialDesignFlatButton}" Command="{s:Action ShowAbout}" Height="60" >
                        <materialDesign:PackIcon Kind="QuestionMarkCircleOutline" Height="30" Width="30" RenderTransformOrigin="0.16,0.207" Foreground="White"/>
                    </Button>
                </StackPanel>
            </Grid>

            <local:ServerListView Grid.RowSpan="2" Grid.Column="1" s:View.Model="{Binding VMServerList}" Visibility="{Binding ShowViewServerList, Converter={x:Static s:BoolToVisibilityConverter.Instance}}"/>
            <local:SettingsView Grid.RowSpan="2" Grid.Column="1" s:View.Model="{Binding VMSettings}" Visibility="{Binding ShowViewSettings, Converter={x:Static s:BoolToVisibilityConverter.Instance}}"/>
            <local:RSSView Grid.RowSpan="2" Grid.Column="1" s:View.Model="{Binding VMRSS}" Visibility="{Binding ShowViewRSS, Converter={x:Static s:BoolToVisibilityConverter.Instance}}"/>

            <!--错误信息显示-->
            <materialDesign:Snackbar IsActive="{Binding ShowErr}" Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Margin="0,0,0,-2">
                <materialDesign:SnackbarMessage Content="{Binding ErrMessage}" ActionContent="OK" ActionClick="{s:Action HideErrmessage}"/>
            </materialDesign:Snackbar>

            <!--右上角窗口按钮-->
            <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" FlowDirection="RightToLeft" Background="Transparent" MouseLeftButtonDown="{s:Action WindowMove}">
                <Button Width="32" Height="24" Command="{s:Action WindowHide}" HorizontalAlignment="Right" Padding="0" Style="{StaticResource MaterialDesignFlatButton}" >
                    <materialDesign:PackIcon Kind="Close" Height="18" Width="18" Foreground="{DynamicResource PrimaryHueLightForegroundBrush}" />
                </Button>
                <Button Width="32" Height="24" Command="{s:Action WindowMax}" Padding="0" Style="{StaticResource MaterialDesignFlatButton}">
                    <materialDesign:PackIcon Kind="WindowMaximize" Height="18" Width="18" Foreground="{DynamicResource PrimaryHueLightForegroundBrush}" />
                </Button>
                <Button Width="32" Height="24" Command="{s:Action WindowMin}" Padding="0" Style="{StaticResource MaterialDesignFlatButton}">
                    <materialDesign:PackIcon Kind="WindowMinimize" Height="18" Width="18" Foreground="{DynamicResource PrimaryHueLightForegroundBrush}" />
                </Button>
            </StackPanel>
        </Grid>
    </materialDesign:DialogHost>
</Window>
